<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Or√ßamento Na Madrugada</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts - Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #1a202c; /* Fundo escuro */
            color: #e2e8f0; /* Texto claro */
        }
        .container {
            max-width: 90%; /* Largura fluida para responsividade */
            margin: 0 auto;
            padding: 1.5rem;
            background-color: #2d3748; /* Fundo escuro um pouco mais claro */
            border-radius: 1rem; /* Cantos arredondados */
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        input[type="number"],
        input[type="date"],
        input[type="time"],
        input[type="text"],
        select,
        textarea {
            background-color: #4a5568; /* Fundo de input mais escuro */
            color: #e2e8f0;
            border: 1px solid #6b7280;
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            width: 100%;
            box-sizing: border-box; /* Inclui padding na largura */
        }
        input[type="checkbox"] {
            transform: scale(1.2); /* Checkbox um pouco maior */
            margin-right: 0.5rem;
        }
        button {
            transition: background-color 0.3s ease, transform 0.2s ease;
        }
        button:hover {
            transform: translateY(-2px);
        }
        .btn-primary {
            background-color: #63b3ed; /* Azul */
            color: #fff;
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: 600;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        .btn-secondary {
            background-color: #48bb78; /* Verde */
            color: #fff;
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: 600;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        .btn-danger {
            background-color: #fc8181; /* Vermelho */
            color: #fff;
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: 600;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        .hidden {
            display: none;
        }
        .total-display {
            font-size: 2.25rem; /* text-4xl */
            font-weight: 700; /* font-bold */
            color: #a0aec0; /* text-gray-400 */
            margin-top: 2rem;
            text-align: center;
        }
        .total-value {
            color: #63b3ed; /* text-blue-400 */
        }
        .detail-item {
            display: flex;
            justify-content: space-between;
            padding: 0.5rem 0;
            border-bottom: 1px dashed #4a5568;
        }
        .detail-item:last-child {
            border-bottom: none;
        }
        .detail-total {
            font-size: 1.5rem;
            font-weight: 700;
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 2px solid #63b3ed;
            display: flex;
            justify-content: space-between;
        }
    </style>
</head>
<body class="flex items-center justify-center min-h-screen p-4">

    <div id="app-container" class="container">

        <!-- Se√ß√£o de Boas-Vindas -->
        <section id="welcome-section" class="text-center transition-opacity duration-500 ease-in-out">
            <h1 class="text-4xl md:text-5xl font-bold mb-6 text-blue-400">Bem-vindo ao Or√ßamento da Banda!</h1>
            <p class="text-lg md:text-xl mb-8 text-gray-300">
                üéµ Pronto para planejar seu evento? Clique no bot√£o abaixo para come√ßar a calcular os custos e gerar uma proposta. üéµ
            </p>
            <button id="start-budget-btn" class="btn-primary">Come√ßar Or√ßamento</button>
        </section>

        <!-- Se√ß√£o do Formul√°rio de Or√ßamento -->
        <section id="budget-form-section" class="hidden transition-opacity duration-500 ease-in-out">
            <h2 class="text-3xl md:text-4xl font-bold mb-8 text-center text-blue-400">Calcule Seu Or√ßamento</h2>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                <div>
                    <label for="event-date" class="block text-gray-300 text-sm font-bold mb-2">Data do Evento:</label>
                    <input type="date" id="event-date" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div>
                    <label for="event-time" class="block text-gray-300 text-sm font-bold mb-2">Hora do Evento:</label>
                    <input type="time" id="event-time" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div class="md:col-span-2">
                    <label for="mileage" class="block text-gray-300 text-sm font-bold mb-2">Quilometragem (ida e volta):</label>
                    <input type="number" id="mileage" min="0" value="0" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                
                <div>
                    <label for="fixed-fee" class="block text-gray-300 text-sm font-bold mb-2">Cach√™ Fixo:</label>
                    <input type="text" id="fixed-fee" value="1500" readonly class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline bg-gray-600 cursor-not-allowed">
                </div>
                <div>
                    <label for="event-days" class="block text-gray-300 text-sm font-bold mb-2">Dias de Evento:</label>
                    <input type="number" id="event-days" min="1" value="1" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div>
                    <label for="band-members" class="block text-gray-300 text-sm font-bold mb-2">Integrantes para Hospedagem:</label>
                    <input type="number" id="band-members" min="0" value="0" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div>
                    <label for="accommodation-cost-per-person" class="block text-gray-300 text-sm font-bold mb-2">Custo Di√°rio Hospedagem por Pessoa:</label>
                    <input type="text" id="accommodation-cost-per-person" value="100" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div>
                    <label for="meals-per-day" class="block text-gray-300 text-sm font-bold mb-2">Refei√ß√µes por Dia (por integrante):</label>
                    <input type="number" id="meals-per-day" min="0" value="0" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div>
                    <label for="meal-cost-per-person" class="block text-gray-300 text-sm font-bold mb-2">Custo Refei√ß√£o por Pessoa:</label>
                    <input type="text" id="meal-cost-per-person" value="50" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div class="col-span-1 md:col-span-2">
                    <div class="flex items-center mb-4">
                        <input type="checkbox" id="optional-sound" class="form-checkbox h-5 w-5 text-blue-600">
                        <label for="optional-sound" class="ml-2 text-gray-300">Som Opcional (R$700,00)</label>
                    </div>
                    <div class="flex items-center">
                        <input type="checkbox" id="optional-lighting" class="form-checkbox h-5 w-5 text-blue-600">
                        <label for="optional-lighting" class="ml-2 text-gray-300">Ilumina√ß√£o Opcional (R$200,00)</label>
                    </div>
                </div>

                <!-- Campos para o nome e localiza√ß√£o do contratante -->
                <div class="md:col-span-2">
                    <label for="contractor-name" class="block text-gray-300 text-sm font-bold mb-2">Nome Completo do Contratante:</label>
                    <input type="text" id="contractor-name" placeholder="Nome completo do cliente" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div>
                    <label for="contractor-city" class="block text-gray-300 text-sm font-bold mb-2">Cidade do Contratante:</label>
                    <input type="text" id="contractor-city" placeholder="Nome da cidade" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>

                <div>
                    <label for="contractor-state" class="block text-gray-300 text-sm font-bold mb-2">Estado do Contratante:</label>
                    <select id="contractor-state" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                        <option value="">Selecione o Estado</option>
                        <option value="AC">Acre</option>
                        <option value="AL">Alagoas</option>
                        <option value="AP">Amap√°</option>
                        <option value="AM">Amazonas</option>
                        <option value="BA">Bahia</option>
                        <option value="CE">Cear√°</option>
                        <option value="DF">Distrito Federal</option>
                        <option value="ES">Esp√≠rito Santo</option>
                        <option value="GO">Goi√°s</option>
                        <option value="MA">Maranh√£o</option>
                        <option value="MT">Mato Grosso</option>
                        <option value="MS">Mato Grosso do Sul</option>
                        <option value="MG">Minas Gerais</option>
                        <option value="PA">Par√°</option>
                        <option value="PB">Para√≠ba</option>
                        <option value="PR">Paran√°</option>
                        <option value="PE">Pernambuco</option>
                        <option value="PI">Piau√≠</option>
                        <option value="RJ">Rio de Janeiro</option>
                        <option value="RN">Rio Grande do Norte</option>
                        <option value="RS">Rio Grande do Sul</option>
                        <option value="RO">Rond√¥nia</option>
                        <option value="RR">Roraima</option>
                        <option value="SC">Santa Catarina</option>
                        <option value="SP">S√£o Paulo</option>
                        <option value="SE">Sergipe</option>
                        <option value="TO">Tocantins</option>
                    </select>
                </div>
            </div>

            <div class="total-display">
                Total do Or√ßamento: <span id="total-budget" class="total-value">R$0,00</span>
            </div>

            <div class="flex flex-col md:flex-row justify-center gap-4 mt-8">
                <button id="calculate-budget-btn" class="btn-primary">Calcular Or√ßamento</button>
                <button id="view-details-btn" class="btn-secondary hidden">Ver Detalhes do Or√ßamento</button>
                <button id="send-whatsapp-btn" class="btn-secondary hidden">Enviar por WhatsApp</button>
                <button id="edit-budget-btn" class="btn-primary hidden">Editar Or√ßamento</button>
                <button id="reset-budget-btn" class="btn-danger hidden">Reiniciar Or√ßamento</button>
            </div>
        </section>

        <!-- Se√ß√£o de Detalhes do Or√ßamento -->
        <section id="budget-details-section" class="hidden transition-opacity duration-500 ease-in-out">
            <h2 class="text-3xl md:text-4xl font-bold mb-8 text-center text-blue-400">Detalhes do Or√ßamento</h2>

            <div id="details-list" class="mb-8 text-gray-200">
                <!-- Detalhes ser√£o inseridos aqui pelo JavaScript -->
            </div>

            <div class="detail-total">
                <span>Total Geral:</span>
                <span id="details-total-value" class="total-value">R$0,00</span>
            </div>

            <div class="flex justify-center mt-8">
                <button id="back-to-form-btn" class="btn-primary">Voltar ao Or√ßamento</button>
            </div>
        </section>

    </div>

    <script>
        // Elementos da interface
        const welcomeSection = document.getElementById('welcome-section');
        const budgetFormSection = document.getElementById('budget-form-section');
        const budgetDetailsSection = document.getElementById('budget-details-section');
        const startBudgetBtn = document.getElementById('start-budget-btn');
        const calculateBudgetBtn = document.getElementById('calculate-budget-btn');
        const viewDetailsBtn = document.getElementById('view-details-btn');
        const sendWhatsappBtn = document.getElementById('send-whatsapp-btn');
        const editBudgetBtn = document.getElementById('edit-budget-btn');
        const resetBudgetBtn = document.getElementById('reset-budget-btn');
        const backToFormBtn = document.getElementById('back-to-form-btn');
        const totalBudgetSpan = document.getElementById('total-budget');
        const detailsListDiv = document.getElementById('details-list');
        const detailsTotalValueSpan = document.getElementById('details-total-value');

        // Campos do formul√°rio
        const eventDateInput = document.getElementById('event-date');
        const eventTimeInput = document.getElementById('event-time');
        const mileageInput = document.getElementById('mileage');
        const fixedFeeInput = document.getElementById('fixed-fee');
        const eventDaysInput = document.getElementById('event-days');
        const bandMembersInput = document.getElementById('band-members');
        const accommodationCostPerPersonInput = document.getElementById('accommodation-cost-per-person');
        const mealsPerDayInput = document.getElementById('meals-per-day');
        const mealCostPerPersonInput = document.getElementById('meal-cost-per-person');
        const optionalSoundCheckbox = document.getElementById('optional-sound');
        const optionalLightingCheckbox = document.getElementById('optional-lighting');

        // Campos do contratante
        const contractorNameInput = document.getElementById('contractor-name');
        const contractorCityInput = document.getElementById('contractor-city');
        const contractorStateSelect = document.getElementById('contractor-state');

        // N√∫mero de WhatsApp da banda
        const whatsappNumber = '71991255772'; // Sem h√≠fens ou espa√ßos

        // Vari√°veis para armazenar os custos detalhados
        let currentDetailedCosts = {};

        // Define um valor fixo para o cach√™ para maior robustez
        const FIXED_FEE_VALUE = 1500;

        // Adiciona event listeners para formatar campos de custo ao perder o foco
        const costInputs = [fixedFeeInput, accommodationCostPerPersonInput, mealCostPerPersonInput];

        /**
         * Formata um valor num√©rico para o padr√£o de moeda brasileira (R$1.000,00).
         * @param {string|number} value - O valor a ser formatado.
         * @returns {string} O valor formatado como moeda.
         */
        function formatToBRL(value) {
            const number = parseFloat(value);
            if (isNaN(number)) {
                return '';
            }
            // Formata o n√∫mero para duas casas decimais, substitui o ponto por v√≠rgula
            // e adiciona pontos de milhar.
            return `R$${number.toFixed(2).replace('.', ',').replace(/\B(?=(\d{3})+(?!\d))/g, '.')}`;
        }

        /**
         * Remove a formata√ß√£o de moeda de uma string, retornando um n√∫mero limpo.
         * @param {string} value - A string de valor com formata√ß√£o de moeda.
         * @returns {number} O valor num√©rico limpo.
         */
        function unformatBRL(value) {
            if (!value) {
                return 0;
            }
            // Remove 'R$', pontos de milhar e substitui v√≠rgula por ponto para o parseFloat.
            return parseFloat(value.replace('R$', '').replace(/\./g, '').replace(',', '.'));
        }

        // Aplica a formata√ß√£o inicial ao carregar a p√°gina para todos os campos de custo
        document.addEventListener('DOMContentLoaded', () => {
            fixedFeeInput.value = formatToBRL(FIXED_FEE_VALUE);
            
            costInputs.forEach(input => {
                if (input.id === 'fixed-fee') return;
                const value = input.value;
                if (value) {
                    input.value = formatToBRL(value);
                }
            });
        });

        // Adiciona os event listeners de foco e perda de foco para os campos de custo
        costInputs.forEach(input => {
            input.addEventListener('focus', (e) => {
                const value = e.target.value;
                if (value) {
                    e.target.value = unformatBRL(value);
                }
                e.target.select();
            });

            input.addEventListener('blur', (e) => {
                const value = e.target.value;
                if (value) {
                    e.target.value = formatToBRL(value);
                }
            });
        });

        // Fun√ß√£o para calcular o or√ßamento
        function calculateBudget() {
            let total = 0;

            const fixedFee = unformatBRL(fixedFeeInput.value) || 0;
            const mileage = parseFloat(mileageInput.value) || 0;
            const eventDays = parseFloat(eventDaysInput.value) || 1;
            const bandMembers = parseFloat(bandMembersInput.value) || 0;
            const accommodationCostPerPerson = unformatBRL(accommodationCostPerPersonInput.value) || 0;
            const mealsPerDay = parseFloat(mealsPerDayInput.value) || 0;
            const mealCostPerPerson = unformatBRL(mealCostPerPersonInput.value) || 0;

            const fuelCostPerKm = 9.00;
            const fuelCost = mileage * fuelCostPerKm;

            const accommodationCost = bandMembers * accommodationCostPerPerson * eventDays;

            const mealsCost = bandMembers * mealsPerDay * mealCostPerPerson * eventDays;

            const soundCost = optionalSoundCheckbox.checked ? 700.00 : 0;
            const lightingCost = optionalLightingCheckbox.checked ? 200.00 : 0;

            total = fixedFee + fuelCost + accommodationCost + mealsCost + soundCost + lightingCost;

            currentDetailedCosts = {
                fixedFee: fixedFee,
                fuelCost: fuelCost,
                accommodationCost: accommodationCost,
                mealsCost: mealsCost,
                soundCost: soundCost,
                lightingCost: lightingCost,
                total: total
            };

            totalBudgetSpan.textContent = formatToBRL(total);

            setFormFieldsEnabled(false);
            calculateBudgetBtn.classList.add('hidden');
            viewDetailsBtn.classList.remove('hidden');
            sendWhatsappBtn.classList.remove('hidden');
            editBudgetBtn.classList.remove('hidden');
            resetBudgetBtn.classList.remove('hidden');
        }

        // Fun√ß√£o para preencher os detalhes do or√ßamento
        function populateBudgetDetails() {
            detailsListDiv.innerHTML = '';

            const details = [
                { label: 'Cach√™ Fixo', value: currentDetailedCosts.fixedFee },
                { label: 'Custo de Combust√≠vel', value: currentDetailedCosts.fuelCost },
                { label: 'Custo de Hospedagem', value: currentDetailedCosts.accommodationCost },
                { label: 'Custo de Refei√ß√µes', value: currentDetailedCosts.mealsCost },
                { label: 'Som Opcional', value: currentDetailedCosts.soundCost },
                { label: 'Ilumina√ß√£o Opcional', value: currentDetailedCosts.lightingCost }
            ];

            details.forEach(item => {
                const div = document.createElement('div');
                div.classList.add('detail-item');
                div.innerHTML = `<span>${item.label}:</span> <span>${formatToBRL(item.value)}</span>`;
                detailsListDiv.appendChild(div);
            });

            detailsTotalValueSpan.textContent = formatToBRL(currentDetailedCosts.total);
        }

        // Fun√ß√£o para habilitar/desabilitar campos do formul√°rio
        function setFormFieldsEnabled(enabled) {
            const fields = [
                eventDateInput, eventTimeInput, mileageInput,
                eventDaysInput, bandMembersInput,
                optionalSoundCheckbox, optionalLightingCheckbox,
                contractorNameInput, contractorCityInput, contractorStateSelect
            ];
            fields.forEach(field => {
                field.disabled = !enabled;
                if (enabled) {
                    field.classList.remove('bg-gray-600', 'cursor-not-allowed');
                } else {
                    field.classList.add('bg-gray-600', 'cursor-not-allowed');
                }
            });

            fixedFeeInput.disabled = false;
            fixedFeeInput.classList.add('bg-gray-600', 'cursor-not-allowed');

            const editableCostInputs = [accommodationCostPerPersonInput, mealCostPerPersonInput];
            editableCostInputs.forEach(field => {
                field.disabled = !enabled;
                if (enabled) {
                    field.classList.remove('bg-gray-600', 'cursor-not-allowed');
                } else {
                    field.classList.add('bg-gray-600', 'cursor-not-allowed');
                }
            });
        }

        // Evento para o bot√£o "Come√ßar Or√ßamento"
        startBudgetBtn.addEventListener('click', () => {
            welcomeSection.classList.add('hidden');
            budgetFormSection.classList.remove('hidden');
            setFormFieldsEnabled(true);
            calculateBudgetBtn.classList.remove('hidden');
            viewDetailsBtn.classList.add('hidden');
            sendWhatsappBtn.classList.add('hidden');
            editBudgetBtn.classList.add('hidden');
            resetBudgetBtn.classList.add('hidden');
            totalBudgetSpan.textContent = formatToBRL(0);
            
            fixedFeeInput.value = formatToBRL(FIXED_FEE_VALUE);
        });

        // Evento para o bot√£o "Calcular Or√ßamento"
        calculateBudgetBtn.addEventListener('click', calculateBudget);

        // Evento para o bot√£o "Ver Detalhes do Or√ßamento"
        viewDetailsBtn.addEventListener('click', () => {
            populateBudgetDetails();
            budgetFormSection.classList.add('hidden');
            budgetDetailsSection.classList.remove('hidden');
        });

        // Evento para o bot√£o "Voltar ao Or√ßamento" (da se√ß√£o de detalhes)
        backToFormBtn.addEventListener('click', () => {
            budgetDetailsSection.classList.add('hidden');
            budgetFormSection.classList.remove('hidden');
        });

        // Evento para o bot√£o "Enviar por WhatsApp"
        sendWhatsappBtn.addEventListener('click', () => {
            const eventDate = eventDateInput.value ? new Date(eventDateInput.value).toLocaleDateString('pt-BR') : 'N√£o informada';
            const eventTime = eventTimeInput.value || 'N√£o informada';
            const mileage = parseFloat(mileageInput.value) || 0;
            const fixedFee = unformatBRL(fixedFeeInput.value) || 0;
            const eventDays = parseFloat(eventDaysInput.value) || 1;
            const bandMembers = parseFloat(bandMembersInput.value) || 0;
            const accommodationCostPerPerson = unformatBRL(accommodationCostPerPersonInput.value) || 0;
            const mealsPerDay = parseFloat(mealsPerDayInput.value) || 0;
            const mealCostPerPerson = unformatBRL(mealCostPerPersonInput.value) || 0;

            const fuelCostPerKm = 9.00;
            const calculatedFuelCost = mileage * fuelCostPerKm;

            const accommodationTotal = bandMembers * accommodationCostPerPerson * eventDays;
            const mealsTotal = bandMembers * mealsPerDay * mealCostPerPerson * eventDays;
            const soundOption = optionalSoundCheckbox.checked ? `Sim (${formatToBRL(700.00)})` : 'N√£o';
            const lightingOption = optionalLightingCheckbox.checked ? `Sim (${formatToBRL(200.00)})` : 'N√£o';
            const totalBudget = unformatBRL(totalBudgetSpan.textContent);

            const contractorName = contractorNameInput.value.trim() || 'N√£o Informado';
            const contractorCity = contractorCityInput.value.trim() || 'N√£o Informado';
            const contractorState = contractorStateSelect.value.trim() || 'N√£o Informado';

            const message = `Ol√°! Segue o or√ßamento da Banda Na Madrugada para o seu evento:%0A%0A` +
                            `*Contratante:*%0A` +
                            `- Nome: ${contractorName}%0A` +
                            `- Local: ${contractorCity} - ${contractorState}%0A%0A` +
                            `*Detalhes do Evento:*%0A` +
                            `- Data: ${eventDate}%0A` +
                            `- Hora: ${eventTime}%0A%0A` +
                            `*Custos Calculados:*%0A` +
                            `- Cach√™ Fixo: ${formatToBRL(fixedFee)}%0A` +
                            `- Quilometragem (ida e volta): ${mileage} km%0A` +
                            `- Custo de Combust√≠vel: ${formatToBRL(calculatedFuelCost)} (R$ 9,00 por km)%0A` +
                            `- Dias de Evento: ${eventDays}%0A` +
                            `- Integrantes para Hospedagem: ${bandMembers} (Custo: ${formatToBRL(accommodationTotal)})%0A` +
                            `- Refei√ß√µes por Dia: ${mealsPerDay} (Custo Total: ${formatToBRL(mealsTotal)})%0A` +
                            `- Som Opcional: ${soundOption}%0A` +
                            `- Ilumina√ß√£o Opcional: ${lightingOption}%0A%0A` +
                            `*TOTAL DO OR√áAMENTO: ${formatToBRL(totalBudget)}*%0A%0A` +
                            `Aguardamos seu contato!`;

            window.open(`https://wa.me/${whatsappNumber}?text=${message}`, '_blank');
        });

        // Evento para o bot√£o "Editar Or√ßamento"
        editBudgetBtn.addEventListener('click', () => {
            setFormFieldsEnabled(true);
            calculateBudgetBtn.classList.remove('hidden');
            viewDetailsBtn.classList.add('hidden');
            sendWhatsappBtn.classList.add('hidden');
            editBudgetBtn.classList.add('hidden');
            resetBudgetBtn.classList.add('hidden');
            const editableCostInputs = [accommodationCostPerPersonInput, mealCostPerPersonInput];
            editableCostInputs.forEach(input => {
                const value = input.value;
                if (value) {
                    input.value = unformatBRL(value);
                }
            });
        });

        // Evento para o bot√£o "Reiniciar Or√ßamento"
        resetBudgetBtn.addEventListener('click', () => {
            eventDateInput.value = '';
            eventTimeInput.value = '';
            mileageInput.value = '0';
            fixedFeeInput.value = '1500';
            eventDaysInput.value = '1';
            bandMembersInput.value = '0';
            accommodationCostPerPersonInput.value = '100';
            mealsPerDayInput.value = '0';
            mealCostPerPersonInput.value = '50';
            optionalSoundCheckbox.checked = false;
            optionalLightingCheckbox.checked = false;

            contractorNameInput.value = '';
            contractorCityInput.value = '';
            contractorStateSelect.value = '';

            totalBudgetSpan.textContent = formatToBRL(0);
            currentDetailedCosts = {};

            budgetDetailsSection.classList.add('hidden');
            budgetFormSection.classList.add('hidden');
            welcomeSection.classList.remove('hidden');

            fixedFeeInput.value = formatToBRL(FIXED_FEE_VALUE);
            accommodationCostPerPersonInput.value = formatToBRL(100);
            mealCostPerPersonInput.value = formatToBRL(50);
        });

    </script>
</body>
</html>
index.html
